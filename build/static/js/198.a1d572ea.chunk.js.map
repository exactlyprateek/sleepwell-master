{"version":3,"sources":["views/servicePages/ServiceCategoryAdd.js"],"names":["ServiceCategoryAdd","useState","showAlertSuccess","setShowAlertSuccess","showAlertDanger","setShowAlertDanger","jwtToken","sessionStorage","getItem","title","setTitle","link","setLink","sortOrder","setSortOrder","image","setImage","status","setStatus","error","loading","setLoading","useEffect","xl","className","role","onClick","type","data-dismiss","aria-label","aria-hidden","encType","onSubmit","formData","FormData","append","axios","post","headers","then","response","console","log","data","category","catch","finally","htmlFor","onChange","e","target","value","placeholder","autoComplete","xs","variant","files","custom","id","src","process","width","alt","checked","disabled"],"mappings":"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","file":"static/js/198.a1d572ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n\t// CBadge,\r\n\tCCard,\r\n\tCCardBody,\r\n\tCCardHeader,\r\n\tCCol,\r\n\t// CDataTable,\r\n\tCRow,\r\n\t// CPagination,\r\n\tCLink,\r\n\tCTabs,\r\n\tCContainer,\r\n\tCFormGroup,\r\n\tCLabel,\r\n\tCInputGroup,\r\n\tCInput,\r\n\tCForm,\r\n\tCInputFile\r\n} from '@coreui/react';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport ReactSwitch from 'react-switch';\r\n\r\nconst ServiceCategoryAdd = () => {\r\n\tconst [serviceCategories, setServiceCategories] = useState([]);\r\n\tconst [showAlertSuccess, setShowAlertSuccess] = useState(false);\r\n\tconst [showAlertDanger, setShowAlertDanger] = useState(false);\r\n\tconst jwtToken = sessionStorage.getItem('token');\r\n\tconst [view, setView] = useState(0);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [link, setLink] = useState('');\r\n\tconst [sortOrder, setSortOrder] = useState('');\r\n\tconst [image, setImage] = useState(null);\r\n\tconst [status, setStatus] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst onHandlerSubmit = () => {\r\n\t\t// alert(categoryId)\r\n\t\tsetLoading(true);\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('title', title);\r\n\t\tformData.append('link', link);\r\n\t\tformData.append('image', image);\r\n\t\tformData.append('sortOrder', sortOrder);\r\n\t\tformData.append('status', status ? 1 : 0);\r\n\t\taxios\r\n\t\t\t.post('http://markbran.in/apis/admin/service-category/',formData, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'auth-token': jwtToken //the token is a variable which holds the token\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response.data.category);\r\n\t\t\t\tsetShowAlertSuccess(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\t// handle error\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetShowAlertDanger(true);\r\n\t\t\t})\r\n\t\t\t.finally(() => setLoading(false));\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t}, []);\r\n\treturn (\r\n\t\t<CRow>\r\n\t\t\t<CCol xl={12}>\r\n\t\t\t\t<CCard>\r\n\t\t\t\t\t<CCardHeader>\r\n\t\t\t\t\t\tAdd New Service Category\r\n\r\n\r\n\t\t\t\t\t</CCardHeader>\r\n\t\t\t\t\t<CCardBody>\r\n\t\t\t\t\t\t{showAlertSuccess ? (\r\n\t\t\t\t\t\t\t<div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t<strong>SAVED</strong> Your item has been saved successfully.\r\n\t\t\t\t\t\t\t\t<button onClick={() => setShowAlertSuccess(false)} type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{showAlertDanger ? (\r\n\t\t\t\t\t\t\t<div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t<strong>Alert</strong> Something went wrong try again later !.\r\n\t\t\t\t\t\t\t\t<button onClick={() => setShowAlertDanger(false)} type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t<CForm encType=\"multipart/form-data\" onSubmit={onHandlerSubmit}>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t{error && <p className=\"text-danger\">{error}</p>}\r\n\t\t\t\t\t\t\t<CRow>\r\n\t\t\t\t\t\t\t\t<CCol xl=\"6\">\r\n\t\t\t\t\t\t\t\t\t<CFormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"shortItem\">Category Ttile</CLabel>\r\n\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<CInput\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"title\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</CInputGroup>\r\n\t\t\t\t\t\t\t\t\t</CFormGroup>\r\n\t\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t\t\t<CCol xs=\"5\">\r\n\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"category\">Category Image</CLabel>\r\n\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"categoryImage\" variant=\"custom-file\">\r\n\t\t\t\t\t\t\t\t\t\t\tChoose Image...\r\n\t\t\t\t\t\t\t\t\t\t</CLabel>\r\n\t\t\t\t\t\t\t\t\t\t{/* <Controller\r\n                                                name=\"bannerImage\"\r\n                                                control={control}\r\n                                                defaultValue={''}\r\n                                                rules={{\r\n                                                    required: {\r\n                                                        value: true,\r\n                                                        message: \"Image file is required\"\r\n                                                    },\r\n                                                }}\r\n                                                render={({ field }) => <CInputFile {...field} onChange={onChange} custom id=\"bannerImage\" />}\r\n                                            /> */}\r\n\t\t\t\t\t\t\t\t\t\t<CInputFile\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setImage(e.target.files[0])}\r\n\t\t\t\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"categoryImage\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</CInputGroup>\r\n\t\t\t\t\t\t\t\t\t{/* <CFormText className=\"help-block text-danger\" color=\"red\">{errors.categoryId && errors.categoryId.message}</CFormText> */}\r\n\t\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t\t\t<CCol xs=\"1\">\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BASE_URL}/${image}`}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"img-fluid\"\r\n\t\t\t\t\t\t\t\t\t\twidth=\"120px\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t\t</CRow>\r\n\t\t\t\t\t\t\t<CRow>\r\n\t\t\t\t\t\t\t\t<CCol xl=\"6\">\r\n\t\t\t\t\t\t\t\t\t<CFormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"shortItem\">Link</CLabel>\r\n\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<CInput\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setLink(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={link}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Link\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"Link\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</CInputGroup>\r\n\t\t\t\t\t\t\t\t\t</CFormGroup>\r\n\t\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t\t\t<CCol xl=\"6\">\r\n\t\t\t\t\t\t\t\t\t<CFormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"shortItem\">Sort Order</CLabel>\r\n\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<CInput\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setSortOrder(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={sortOrder}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Sort order\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"Sort Order\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</CInputGroup>\r\n\t\t\t\t\t\t\t\t\t</CFormGroup>\r\n\t\t\t\t\t\t\t\t</CCol>\r\n\r\n\t\t\t\t\t\t\t</CRow>\r\n\r\n\t\t\t\t\t\t\t<CRow>\r\n\t\t\t\t\t\t\t\t<CCol xl=\"6\">\r\n\t\t\t\t\t\t\t\t\t<CFormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"category\">Status</CLabel>\r\n\t\t\t\t\t\t\t\t\t\t<CInputGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t<ReactSwitch onChange={() => setStatus(!status)} checked={status} />\r\n\t\t\t\t\t\t\t\t\t\t</CInputGroup>\r\n\t\t\t\t\t\t\t\t\t</CFormGroup>\r\n\t\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t\t</CRow>\r\n\t\t\t\t\t\t\t<CRow>\r\n\t\t\t\t\t\t\t\t<CCol xs=\"8\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={loading ? true : false}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{loading ? 'Loading...' : 'Add Category'}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t\t</CRow>\r\n\t\t\t\t\t\t</CForm>\r\n\t\t\t\t\t</CCardBody>\r\n\t\t\t\t</CCard>\r\n\t\t\t</CCol>\r\n\t\t</CRow>\r\n\t);\r\n}\r\n\r\nexport default ServiceCategoryAdd;\r\n"],"sourceRoot":""}