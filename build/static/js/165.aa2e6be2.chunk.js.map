{"version":3,"sources":["views/discount/AddDiscount.js"],"names":["axios","require","default","schema","yup","shape","productId","required","stateId","expireDate","discount","AddDiscount","useForm","mode","resolver","yupResolver","register","control","handleSubmit","errors","formState","useHistory","useState","error","setError","loading","isFeatured","setIsFeatured","categoryImage","setCategoryImage","Date","startDate","setStartDate","addAsBanner","setAddAsBanner","states","setStates","products","setProducts","jwtToken","sessionStorage","getItem","useEffect","get","headers","then","response","data","catch","message","xs","sm","onSubmit","e","formData","FormData","append","categoryName","className","htmlFor","name","value","map","item","index","id","title","color","state","defaultValue","rules","render","field","type","placeholder","autoComplete","variant","onChange","target","files","custom","xl","checked","disabled"],"mappings":"sOA0BMA,EAAQC,EAAQ,KAASC,QAEzBC,EAASC,MAAaC,MAAM,CAC9BC,UAAWF,MAAaG,WACxBC,QAASJ,MAAaG,WACtBE,WAAYL,MAAaG,WACzBG,SAAUN,MAAaG,aA0PZI,UAvPK,WAChB,MAAmEC,YAAQ,CAAEC,KAAM,MAAOC,SAAUC,YAAYZ,KAAxGa,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,aAA2BC,EAAtD,EAAyCC,UAAaD,OAGtD,GAD0CE,cACAC,mBAAS,OAAnD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KACA,GADA,KAC0CH,oBAAS,IAAnD,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA0CL,mBAAS,IAAnD,mBAAOM,EAAP,KAAsBC,EAAtB,KACA,EAA0CP,mBAAS,IAAIQ,MAAvD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CV,oBAAS,GAAnD,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAA0CZ,mBAAS,IAAnD,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAA0Cd,mBAAS,IAAnD,mBAAOe,EAAP,KAAiBC,EAAjB,KAGIC,EAAWC,eAAeC,QAAQ,SAyDtCC,qBAAU,WAhCN1C,EAAM2C,IAAI,sCAAuC,CAC7CC,QAAS,CACL,aAAcL,KAGjBM,MAAK,SAAUC,GACZV,EAAUU,EAASC,KAAKZ,WAE3Ba,OAAM,SAAUzB,GACTA,EAAMuB,UAAYvB,EAAMuB,SAASC,KAAKE,SACtCzB,EAASD,EAAMuB,SAASC,KAAKE,YAMzCjD,EAAM2C,IAAN,yCAAoD,CAChDC,QAAS,CACL,aAAcL,KAGjBM,MAAK,SAAUC,GACZR,EAAYQ,EAASC,KAAKV,aAE7BW,OAAM,SAAUzB,GACTA,EAAMuB,UAAYvB,EAAMuB,SAASC,KAAKE,QACtCzB,EAASD,EAAMuB,SAASC,KAAKE,SAE7BzB,EAAS,8BAOtB,IAqCH,OACI,8BACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAM0B,GAAG,KAAKC,GAAG,KAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,2BAGA,cAAC,IAAD,UACI,eAAC,IAAD,CAAOC,SAAUlC,GA7CjB,SAACmC,GAGrB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAU9B,GAC1B4B,EAASE,OAAO,QAASH,EAAEI,cAC3BH,EAASE,OAAO,QAAS5B,GAIzBJ,EAAS,SAmCW,UACI,uBAEID,GACA,mBAAGmC,UAAU,cAAb,SACKnC,IAGT,eAAC,KAAD,WACI,cAAC,IAAD,CAAM2B,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQS,QAAQ,WAAhB,4BACA,cAAC,IAAD,CAAaD,UAAU,OAAvB,SACI,eAAC,KAAD,yBAASE,KAAK,aAAgB5C,EAAS,cAAvC,cACI,wBAAQ6C,MAAM,GAAd,4BAGCxB,EAASyB,KAAI,SAACC,EAAMC,GAAP,OACV,wBAAoBH,MAAOE,EAAKE,GAAhC,SAAqCF,EAAKG,OAA7BF,YAKzB,cAAC,IAAD,CAAWN,UAAU,yBAAyBS,MAAM,MAApD,SAA2DhD,EAAOb,WAAaa,EAAOb,UAAU2C,eAGxG,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQS,QAAQ,WAAhB,0BACA,cAAC,IAAD,CAAaD,UAAU,OAAvB,SACI,eAAC,KAAD,yBAASE,KAAK,WAAc5C,EAAS,YAArC,cACI,wBAAQ6C,MAAM,GAAd,0BAGC1B,EAAO2B,KAAI,SAACC,EAAMC,GAAP,OACR,wBAAQH,MAAOE,EAAKE,GAApB,SACKF,EAAKK,iBAKtB,cAAC,IAAD,CAAWV,UAAU,yBAAyBS,MAAM,MAApD,SAA2DhD,EAAOX,SAAWW,EAAOX,QAAQyC,kBAIxG,eAAC,KAAD,WACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQS,QAAQ,WAAhB,sCACA,cAAC,IAAD,CAAaD,UAAU,OAAvB,SACI,cAAC,IAAD,CACIE,KAAK,WACL3C,QAASA,EACToD,aAAc,GACdC,MAAO,CACH/D,SAAU,CACNsD,OAAO,EACPZ,QAAS,yBAGjBsB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,IAAD,2BAAYA,GAAZ,IAAmBC,KAAK,OAAOC,YAAY,eAAeC,aAAa,mBAGtG,cAAC,IAAD,CAAWjB,UAAU,yBAAyBS,MAAM,MAApD,SAA2DhD,EAAOT,UAAYS,EAAOT,SAASuC,eAGtG,eAAC,IAAD,CAAMC,GAAG,IAAT,UACI,cAAC,KAAD,CAAQS,QAAQ,WAAhB,mBACA,eAAC,IAAD,CAAaD,UAAU,OAAvB,UACI,cAAC,KAAD,CAAQC,QAAQ,QAAQiB,QAAQ,cAAhC,6BAGA,cAAC,IAAD,CAAYC,SA3KxB,SAACxB,GACzBxB,EAAiBwB,EAAEyB,OAAOC,MAAM,KA0K+CC,QAAM,EAACf,GAAG,QAAQQ,KAAK,kBAI9E,eAAC,KAAD,WACI,cAAC,IAAD,CAAMQ,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQtB,QAAQ,cAAhB,yBACA,cAAC,IAAD,UACI,cAAC,IAAD,2BACQ3C,EAAS,eADjB,IAEI6D,SA3K3B,SAAC9C,GAClBC,EAAaD,IA2K+B8B,MAAO9B,OAGf,cAAC,IAAD,CAAW2B,UAAU,yBAAyBS,MAAM,MAApD,SAA2DhD,EAAOV,YAAcU,EAAOV,WAAWwC,eAG1G,cAAC,IAAD,CAAMgC,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQtB,QAAQ,WAAhB,2BACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAQkB,SA1LxB,SAACxB,GACzBnB,EAAemB,IAyLgE6B,QAASjD,cAKhE,cAAC,KAAD,UAEI,cAAC,IAAD,CAAMgD,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQtB,QAAQ,WAAhB,oBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAQkB,SAxMzB,SAACxB,GACxB1B,EAAc0B,IAuMgE6B,QAASxD,aAO/D,cAAC,KAAD,UACI,cAAC,IAAD,CAAMwB,GAAG,IAAT,SACI,wBAAQQ,UAAU,kBAAkByB,WAAU1D,EAAwBgD,KAAK,SAA3E,SAAqFhD,EAAU,aAAe","file":"static/js/165.aa2e6be2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n    // CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CFormText,\n    CInput,\n    CInputFile,\n    CInputGroup,\n    CLabel,\n    CRow,\n    CSelect,\n    // CSwitch\n} from '@coreui/react'\n// import CIcon from '@coreui/icons-react'\n// import { DocsLink } from 'src/reusable'\nimport DatePicker from 'react-date-picker';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport Switch from \"react-switch\";\nconst axios = require('axios').default;\n\nconst schema = yup.object().shape({\n    productId: yup.string().required(),\n    stateId: yup.string().required(),\n    expireDate: yup.string().required(),\n    discount: yup.string().required(),\n});\n\nconst AddDiscount = () => {\n    const { register, control, handleSubmit, formState: { errors } } = useForm({ mode: 'all', resolver: yupResolver(schema) });\n\n    let   history                           = useHistory();\n    const [error, setError]                 = useState(null);\n    const [loading, setLoading]             = useState(false);\n    const [isFeatured, setIsFeatured]       = useState(true);\n    const [categoryImage, setCategoryImage] = useState('');\n    const [startDate, setStartDate]         = useState(new Date());\n    const [addAsBanner, setAddAsBanner]     = useState(false);\n    const [states, setStates]               = useState([]);\n    const [products, setProducts]           = useState([]);\n\n\n    let jwtToken = sessionStorage.getItem(\"token\");\n\n\n\n    \n\n    //* category image\n    const couponImageOnChange = (e) => {\n        setCategoryImage(e.target.files[0]);\n    }\n\n    const onChangeIsFeatured = (e) => {\n        setIsFeatured(e);\n    }\n    const onChangeAddAsBanner = (e) => {\n        setAddAsBanner(e);\n    }\n\n    const yearOnChange = (startDate) => {\n        setStartDate(startDate);\n    }\n\n\n    //* get state \n    const axiosCategories = () => {\n        axios.get('http://markbran.in/apis/admin/state', {\n            headers: {\n                \"auth-token\": jwtToken //the token is a variable which holds the token\n            }\n        })\n            .then(function (response) {\n                setStates(response.data.states);\n            })\n            .catch(function (error) {\n                if (error.response && error.response.data.message) {\n                    setError(error.response.data.message);\n                }\n            });\n    }\n    //* get products\n    const axiosProducts = () => {\n        axios.get(`http://markbran.in/apis/admin/products`, {\n            headers: {\n                'auth-token': jwtToken\n            }\n        })\n            .then(function (response) {\n                setProducts(response.data.products);\n            })\n            .catch(function (error) {\n                if (error.response && error.response.data.message) {\n                    setError(error.response.data.message);\n                } else {\n                    setError(\"Something went wrong!\");\n                }\n            });\n    }\n    useEffect(() => {\n        axiosCategories();\n        axiosProducts();\n    }, []);\n    const onHandlerSubmit = (e) => {\n        // e.preventDefault();\n        // console.log('value', e);\n        const formData = new FormData();\n        formData.append('status', isFeatured);\n        formData.append('title', e.categoryName);\n        formData.append('image', categoryImage);\n        // formData.append('status', 1);\n\n\n        setError(null);\n        // setLoading(true)\n\n        // axios.post('http://markbran.in/apis/admin/category', formData, {\n        //     headers: {\n        //         'Content-Type': 'multipart/form-data',\n        //         'auth-token': jwtToken\n        //     }\n        // })\n        //     .then(res => {\n        //         setLoading(false);\n        //         // setUserSession(response.data.token, response.data.user);\n        //         history.push('/categories')\n        //         console.log(res.response.data);\n        //     })\n        //     .catch(err => {\n        //         // console.log(err.response.data.message);\n        //         setLoading(false);\n        //         if (err.response && err.response.data.message) {\n        //             setError(err.response.data.message);\n        //         } else {\n        //             setError(\"Something went wrong!\");\n        //         }\n        //     });\n    }\n\n    return (\n        <div>\n            <CRow>\n                <CCol xs=\"12\" sm=\"12\">\n                    <CCard>\n                        <CCardHeader>\n                            Add Discount\n                        </CCardHeader>\n                        <CCardBody>\n                            <CForm onSubmit={handleSubmit(onHandlerSubmit)}>\n                                <br />\n                                {\n                                    error &&\n                                    <p className=\"text-danger\">\n                                        {error}\n                                    </p>\n                                }\n                                <CRow>\n                                    <CCol xs=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Select product</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CSelect name=\"productId\" {...register(\"productId\")}>\n                                                    <option value=\"\">\n                                                        Select product\n                                                    </option>\n                                                    {products.map((item, index) =>\n                                                        <option key={index} value={item.id}>{item.title}</option>\n                                                    )}\n                                                </CSelect>\n\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.productId && errors.productId.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Select state</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CSelect name=\"stateId\" {...register(\"stateId\")}>\n                                                    <option value=\"\">\n                                                        Select state\n                                                    </option>\n                                                    {states.map((item, index) =>\n                                                        <option value={item.id}>\n                                                            {item.state}\n                                                        </option>\n                                                    )}\n                                                </CSelect>\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.stateId && errors.stateId.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol xs=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Discount (In percentage)</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <Controller\n                                                    name=\"discount\"\n                                                    control={control}\n                                                    defaultValue={''}\n                                                    rules={{\n                                                        required: {\n                                                            value: true,\n                                                            message: \"Discount is required\"\n                                                        },\n                                                    }}\n                                                    render={({ field }) => <CInput {...field} type=\"text\" placeholder=\"Add Discount\" autoComplete=\"Discount\" />}\n                                                />\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.discount && errors.discount.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"6\">\n                                        <CLabel htmlFor=\"category\">Image</CLabel>\n                                        <CInputGroup className=\"mb-3\">\n                                            <CLabel htmlFor=\"image\" variant=\"custom-file\">\n                                                Choose image...\n                                            </CLabel>\n                                            <CInputFile onChange={couponImageOnChange} custom id=\"image\" type=\"file\" />\n                                        </CInputGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol xl=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"Button Link\">Expiry Date</CLabel>\n                                            <CInputGroup>\n                                                <DatePicker\n                                                    {...register('expireDate')}\n                                                    onChange={yearOnChange}\n                                                    value={startDate}\n                                                />\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.expireDate && errors.expireDate.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xl=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Add as banner</CLabel>\n                                            <CInputGroup>\n                                                <Switch onChange={onChangeAddAsBanner} checked={addAsBanner} />\n                                            </CInputGroup>\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    \n                                    <CCol xl=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Status</CLabel>\n                                            <CInputGroup>\n                                                <Switch onChange={onChangeIsFeatured} checked={isFeatured} />\n                                            </CInputGroup>\n                                        </CFormGroup>\n                                    </CCol>\n                                    \n                                    \n                                </CRow>\n                                <CRow>\n                                    <CCol xs=\"8\">\n                                        <button className=\"btn btn-success\" disabled={loading ? true : false} type=\"submit\">{loading ? 'Loading...' : 'Add Discount'}</button>\n                                    </CCol>\n                                </CRow>\n                            </CForm>\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n\n        </div>\n    )\n}\n\nexport default AddDiscount\n"],"sourceRoot":""}