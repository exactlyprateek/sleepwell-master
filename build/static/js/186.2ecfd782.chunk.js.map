{"version":3,"sources":["views/discount/AddDiscount.js"],"names":["axios","require","default","schema","yup","shape","productId","required","stateId","expireDate","discount","AddDiscount","useForm","mode","resolver","yupResolver","register","control","handleSubmit","errors","formState","useHistory","useState","error","setError","loading","isFeatured","setIsFeatured","categoryImage","setCategoryImage","Date","startDate","setStartDate","addAsBanner","setAddAsBanner","states","setStates","products","setProducts","jwtToken","sessionStorage","getItem","useEffect","get","headers","then","response","data","catch","message","xs","sm","onSubmit","e","formData","FormData","append","categoryName","className","htmlFor","name","value","map","item","index","id","title","color","state","defaultValue","rules","render","field","type","placeholder","autoComplete","variant","onChange","target","files","custom","xl","checked","disabled"],"mappings":"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","file":"static/js/186.2ecfd782.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n    // CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CInput,\r\n    CInputFile,\r\n    CInputGroup,\r\n    CLabel,\r\n    CRow,\r\n    CSelect,\r\n    // CSwitch\r\n} from '@coreui/react'\r\n// import CIcon from '@coreui/icons-react'\r\n// import { DocsLink } from 'src/reusable'\r\nimport DatePicker from 'react-date-picker';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\nimport Switch from \"react-switch\";\r\nconst axios = require('axios').default;\r\n\r\nconst schema = yup.object().shape({\r\n    productId: yup.string().required(),\r\n    stateId: yup.string().required(),\r\n    expireDate: yup.string().required(),\r\n    discount: yup.string().required(),\r\n});\r\n\r\nconst AddDiscount = () => {\r\n    const { register, control, handleSubmit, formState: { errors } } = useForm({ mode: 'all', resolver: yupResolver(schema) });\r\n\r\n    let   history                           = useHistory();\r\n    const [error, setError]                 = useState(null);\r\n    const [loading, setLoading]             = useState(false);\r\n    const [isFeatured, setIsFeatured]       = useState(true);\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [startDate, setStartDate]         = useState(new Date());\r\n    const [addAsBanner, setAddAsBanner]     = useState(false);\r\n    const [states, setStates]               = useState([]);\r\n    const [products, setProducts]           = useState([]);\r\n\r\n\r\n    let jwtToken = sessionStorage.getItem(\"token\");\r\n\r\n\r\n\r\n    \r\n\r\n    //* category image\r\n    const couponImageOnChange = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n    }\r\n\r\n    const onChangeIsFeatured = (e) => {\r\n        setIsFeatured(e);\r\n    }\r\n    const onChangeAddAsBanner = (e) => {\r\n        setAddAsBanner(e);\r\n    }\r\n\r\n    const yearOnChange = (startDate) => {\r\n        setStartDate(startDate);\r\n    }\r\n\r\n\r\n    //* get state \r\n    const axiosCategories = () => {\r\n        axios.get('http://markbran.in/apis/admin/state', {\r\n            headers: {\r\n                \"auth-token\": jwtToken //the token is a variable which holds the token\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                setStates(response.data.states);\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response && error.response.data.message) {\r\n                    setError(error.response.data.message);\r\n                }\r\n            });\r\n    }\r\n    //* get products\r\n    const axiosProducts = () => {\r\n        axios.get(`http://markbran.in/apis/admin/products`, {\r\n            headers: {\r\n                'auth-token': jwtToken\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                setProducts(response.data.products);\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response && error.response.data.message) {\r\n                    setError(error.response.data.message);\r\n                } else {\r\n                    setError(\"Something went wrong!\");\r\n                }\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        axiosCategories();\r\n        axiosProducts();\r\n    }, []);\r\n    const onHandlerSubmit = (e) => {\r\n        // e.preventDefault();\r\n        // console.log('value', e);\r\n        const formData = new FormData();\r\n        formData.append('status', isFeatured);\r\n        formData.append('title', e.categoryName);\r\n        formData.append('image', categoryImage);\r\n        // formData.append('status', 1);\r\n\r\n\r\n        setError(null);\r\n        // setLoading(true)\r\n\r\n        // axios.post('http://markbran.in/apis/admin/category', formData, {\r\n        //     headers: {\r\n        //         'Content-Type': 'multipart/form-data',\r\n        //         'auth-token': jwtToken\r\n        //     }\r\n        // })\r\n        //     .then(res => {\r\n        //         setLoading(false);\r\n        //         // setUserSession(response.data.token, response.data.user);\r\n        //         history.push('/categories')\r\n        //         console.log(res.response.data);\r\n        //     })\r\n        //     .catch(err => {\r\n        //         // console.log(err.response.data.message);\r\n        //         setLoading(false);\r\n        //         if (err.response && err.response.data.message) {\r\n        //             setError(err.response.data.message);\r\n        //         } else {\r\n        //             setError(\"Something went wrong!\");\r\n        //         }\r\n        //     });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            Add Discount\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CForm onSubmit={handleSubmit(onHandlerSubmit)}>\r\n                                <br />\r\n                                {\r\n                                    error &&\r\n                                    <p className=\"text-danger\">\r\n                                        {error}\r\n                                    </p>\r\n                                }\r\n                                <CRow>\r\n                                    <CCol xs=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"category\">Select product</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CSelect name=\"productId\" {...register(\"productId\")}>\r\n                                                    <option value=\"\">\r\n                                                        Select product\r\n                                                    </option>\r\n                                                    {products.map((item, index) =>\r\n                                                        <option key={index} value={item.id}>{item.title}</option>\r\n                                                    )}\r\n                                                </CSelect>\r\n\r\n                                            </CInputGroup>\r\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.productId && errors.productId.message}</CFormText>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                    <CCol xs=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"category\">Select state</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CSelect name=\"stateId\" {...register(\"stateId\")}>\r\n                                                    <option value=\"\">\r\n                                                        Select state\r\n                                                    </option>\r\n                                                    {states.map((item, index) =>\r\n                                                        <option value={item.id}>\r\n                                                            {item.state}\r\n                                                        </option>\r\n                                                    )}\r\n                                                </CSelect>\r\n                                            </CInputGroup>\r\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.stateId && errors.stateId.message}</CFormText>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol xs=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"category\">Discount (In percentage)</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <Controller\r\n                                                    name=\"discount\"\r\n                                                    control={control}\r\n                                                    defaultValue={''}\r\n                                                    rules={{\r\n                                                        required: {\r\n                                                            value: true,\r\n                                                            message: \"Discount is required\"\r\n                                                        },\r\n                                                    }}\r\n                                                    render={({ field }) => <CInput {...field} type=\"text\" placeholder=\"Add Discount\" autoComplete=\"Discount\" />}\r\n                                                />\r\n                                            </CInputGroup>\r\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.discount && errors.discount.message}</CFormText>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                    <CCol xs=\"6\">\r\n                                        <CLabel htmlFor=\"category\">Image</CLabel>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CLabel htmlFor=\"image\" variant=\"custom-file\">\r\n                                                Choose image...\r\n                                            </CLabel>\r\n                                            <CInputFile onChange={couponImageOnChange} custom id=\"image\" type=\"file\" />\r\n                                        </CInputGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol xl=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"Button Link\">Expiry Date</CLabel>\r\n                                            <CInputGroup>\r\n                                                <DatePicker\r\n                                                    {...register('expireDate')}\r\n                                                    onChange={yearOnChange}\r\n                                                    value={startDate}\r\n                                                />\r\n                                            </CInputGroup>\r\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.expireDate && errors.expireDate.message}</CFormText>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                    <CCol xl=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"category\">Add as banner</CLabel>\r\n                                            <CInputGroup>\r\n                                                <Switch onChange={onChangeAddAsBanner} checked={addAsBanner} />\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    \r\n                                    <CCol xl=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"category\">Status</CLabel>\r\n                                            <CInputGroup>\r\n                                                <Switch onChange={onChangeIsFeatured} checked={isFeatured} />\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                    \r\n                                    \r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol xs=\"8\">\r\n                                        <button className=\"btn btn-success\" disabled={loading ? true : false} type=\"submit\">{loading ? 'Loading...' : 'Add Discount'}</button>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddDiscount\r\n"],"sourceRoot":""}