{"version":3,"sources":["views/coupon/AddCoupon.js"],"names":["axios","require","default","schema","yup","shape","couponType","required","productId","couponCode","value","stateId","AddCoupon","useForm","mode","resolver","yupResolver","register","control","handleSubmit","errors","formState","useHistory","useState","error","setError","loading","isFeatured","setIsFeatured","categoryImage","setCategoryImage","buttonText","buttonLink","description","setDescription","Date","startDate","setStartDate","states","setStates","products","setProducts","jwtToken","sessionStorage","getItem","useEffect","get","headers","then","response","data","catch","message","xs","sm","onSubmit","e","formData","FormData","append","categoryName","className","htmlFor","name","color","defaultValue","rules","render","field","type","placeholder","autoComplete","variant","onChange","target","files","custom","id","map","item","index","title","xl","state","checked","rows","disabled"],"mappings":"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","file":"static/js/164.960cf08b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CFormText,\n    CInput,\n    CInputFile,\n    CInputGroup,\n    CLabel,\n    CRow,\n    CSelect,\n    CTextarea,\n} from '@coreui/react'\n// import CIcon from '@coreui/icons-react'\n// import { DocsLink } from 'src/reusable'\nimport DatePicker from 'react-date-picker';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport Switch from \"react-switch\";\nconst axios = require('axios').default;\n\nconst schema = yup.object().shape({\n    couponType: yup.string().required(),\n    productId: yup.string().required(),\n    couponCode: yup.string().required(),\n    value: yup.string().required(),\n    stateId: yup.string().required(),\n});\n\nconst AddCoupon = () => {\n    const { register, control, handleSubmit, formState: { errors } } = useForm({ mode: 'all', resolver: yupResolver(schema) });\n    let history = useHistory();\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [isFeatured, setIsFeatured] = useState(true);\n    const [categoryImage, setCategoryImage] = useState('');\n    const [buttonText, setButtonText] = useState('');\n    const [buttonLink, setButtonLink] = useState('');\n    const [description, setDescription] = useState('');\n    const [startDate, setStartDate] = useState(new Date());\n    const [states, setStates] = useState([]);\n    const [products, setProducts] = useState([]);\n\n\n\n    let jwtToken = sessionStorage.getItem(\"token\");\n\n\n    //* description\n    const descriptionOnChange = (e) => {\n        setDescription(e.target.value);\n    }\n    //* button text\n    const buttonTextOnChange = (e) => {\n        setButtonText(e.target.value);\n    }\n    //* button text\n    const buttonLinkOnChange = (e) => {\n        setButtonLink(e.target.value);\n    }\n\n    //* category image\n    const couponImageOnChange = (e) => {\n        setCategoryImage(e.target.files[0]);\n    }\n\n    const onChangeIsFeatured = (e) => {\n        setIsFeatured(e);\n    }\n\n    const yearOnChange = (startDate) => {\n        setStartDate(startDate);\n    }\n\n    //* get state \n    const axiosCategories = () => {\n        axios.get('http://markbran.in/apis/admin/state', {\n            headers: {\n                \"auth-token\": jwtToken //the token is a variable which holds the token\n            }\n        })\n            .then(function (response) {\n                setStates(response.data.states);\n            })\n            .catch(function (error) {\n                if (error.response && error.response.data.message) {\n                    setError(error.response.data.message);\n                }\n            });\n    }\n    //* get products\n    const axiosProducts = () => {\n        axios.get(`http://markbran.in/apis/admin/products`, {\n            headers: {\n                'auth-token': jwtToken\n            }\n        })\n            .then(function (response) {\n                setProducts(response.data.products);\n            })\n            .catch(function (error) {\n                if (error.response && error.response.data.message) {\n                    setError(error.response.data.message);\n                } else {\n                    setError(\"Something went wrong!\");\n                }\n            });\n    }\n    useEffect(() => {\n        axiosCategories();\n        axiosProducts();\n    }, []);\n\n    const onHandlerSubmit = (e) => {\n        const formData = new FormData();\n        formData.append('status', isFeatured);\n        formData.append('title', e.categoryName);\n        formData.append('image', categoryImage);\n        formData.append('buttonText', buttonText);\n        formData.append('buttonLink', buttonLink);\n        formData.append('description', description);\n        // formData.append('status', 1);\n\n\n        setError(null);\n        // setLoading(true)\n\n        // axios.post('http://markbran.in/apis/admin/category', formData, {\n        //     headers: {\n        //         'Content-Type': 'multipart/form-data',\n        //         'auth-token': jwtToken\n        //     }\n        // })\n        //     .then(res => {\n        //         setLoading(false);\n        //         // setUserSession(response.data.token, response.data.user);\n        //         history.push('/categories')\n        //         console.log(res.response.data);\n        //     })\n        //     .catch(err => {\n        //         // console.log(err.response.data.message);\n        //         setLoading(false);\n        //         if (err.response && err.response.data.message) {\n        //             setError(err.response.data.message);\n        //         } else {\n        //             setError(\"Something went wrong!\");\n        //         }\n        //     });\n    }\n\n    return (\n        <div>\n            <CRow>\n                <CCol xs=\"12\" sm=\"12\">\n                    <CCard>\n                        <CCardHeader>\n                            Add Coupon\n                        </CCardHeader>\n                        <CCardBody>\n                            <CForm onSubmit={handleSubmit(onHandlerSubmit)}>\n                                <br />\n                                {\n                                    error &&\n                                    <p className=\"text-danger\">\n                                        {error}\n                                    </p>\n                                }\n                                <CRow>\n                                    <CCol xs=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Select coupon type</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CSelect name=\"couponType\" {...register(\"couponType\")}>\n                                                    <option value=\"\">\n                                                        Select coupon type\n                                                    </option>\n                                                    <option value=\"percentage\">\n                                                        Percentage\n                                                    </option>\n                                                    <option value=\"amount\">\n                                                        Amount\n                                                    </option>\n                                                </CSelect>\n\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.couponType && errors.couponType.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Coupon Code</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <Controller\n                                                    name=\"couponCode\"\n                                                    control={control}\n                                                    defaultValue={''}\n                                                    rules={{\n                                                        required: {\n                                                            value: true,\n                                                            message: \"Coupon code is required\"\n                                                        },\n                                                    }}\n                                                    render={({ field }) => <CInput {...field} type=\"text\" placeholder=\"Coupon code\" autoComplete=\"Coupon code\" />}\n                                                />\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.couponCode && errors.couponCode.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                    \n                                </CRow>\n                                <CRow>\n                                    <CCol xs=\"6\">\n                                        <CLabel htmlFor=\"category\">Image</CLabel>\n                                        <CInputGroup className=\"mb-3\">\n                                            <CLabel htmlFor=\"image\" variant=\"custom-file\">\n                                                Choose image...\n                                            </CLabel>\n                                            <CInputFile onChange={couponImageOnChange} custom id=\"image\" type=\"file\" />\n                                        </CInputGroup>\n                                    </CCol>\n                                    <CCol xs=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Select product</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CSelect name=\"productId\" {...register(\"productId\")}>\n                                                    <option value=\"\">\n                                                        Select product\n                                                    </option>\n                                                    {products.map((item, index) =>\n                                                        <option key={index} value={item.id}>{item.title}</option>\n                                                    )}\n                                                </CSelect>\n\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.productId && errors.productId.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                    \n                                    \n                                </CRow>\n                                <CRow>\n                                    <CCol xl=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"Button Text\">Value (Percentage/Amount)</CLabel>\n                                            <CInputGroup>\n                                                <CInput type=\"text\" {...register('value')} placeholder=\"Value (Percentage/Amount)\" autoComplete=\"value\" />\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.value && errors.value.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Select state</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CSelect name=\"stateId\" {...register(\"stateId\")}>\n                                                    <option value=\"\">\n                                                        Select state\n                                                    </option>\n                                                    {states.map((item, index) => \n                                                        <option value={item.id}>\n                                                            {item.state}\n                                                        </option>\n                                                    )}\n                                                </CSelect>\n                                            </CInputGroup>\n                                            <CFormText className=\"help-block text-danger\" color=\"red\">{errors.stateId && errors.stateId.message}</CFormText>\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol xl=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Status</CLabel>\n                                            <CInputGroup>\n                                                <Switch onChange={onChangeIsFeatured} checked={isFeatured} />\n                                            </CInputGroup>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xl=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"Button Link\">Expiry Date</CLabel>\n                                            <CInputGroup>\n                                                <DatePicker\n                                                    onChange={yearOnChange}\n                                                    value={startDate}\n                                                />\n                                            </CInputGroup>\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol xl=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Description</CLabel>\n                                            <CInputGroup>\n                                                <CTextarea\n                                                    // component=\"textarea\"\n                                                    id=\"content\"\n                                                    rows=\"3\"\n                                                    onChange={descriptionOnChange} value={description}\n                                                ></CTextarea>\n                                            </CInputGroup>\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                \n                                <CRow>\n                                    <CCol xs=\"8\">\n                                        <button className=\"btn btn-success\" disabled={loading ? true : false} type=\"submit\">{loading ? 'Loading...' : 'Add Coupon'}</button>\n                                    </CCol>\n                                </CRow>\n                            </CForm>\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n\n        </div>\n    )\n}\n\nexport default AddCoupon\n"],"sourceRoot":""}