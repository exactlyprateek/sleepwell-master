{"version":3,"sources":["views/product_service/ProductServiceReview.js"],"names":["ProductServiceReview","useState","reviews","setReviews","showAlertSuccess","setShowAlertSuccess","showAlertDanger","setShowAlertDanger","textMessage","setTextMessage","setIsActive","jwtToken","sessionStorage","getItem","deleteSize","reviewId","axios","delete","then","response","axiosReviews","catch","error","updateStatus","rstatus","formData","FormData","status","JSON","parse","console","log","append","post","headers","data","message","get","useEffect","xl","className","role","type","data-dismiss","aria-label","aria-hidden","scope","map","item","index","name","productName","description","onChange","id","checked","dateFormat","createdAt","onClick","confirmAlert","title","buttons","label"],"mappings":"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","file":"static/js/194.1ab188d1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n    // CBadge,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    // CDataTable,\r\n    CRow,\r\n    // CPagination,\r\n    CLink\r\n} from '@coreui/react'\r\nimport axios from 'axios'\r\nimport dateFormat from 'dateformat'\r\nimport { confirmAlert } from 'react-confirm-alert'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport Switch from \"react-switch\";\r\n\r\nconst ProductServiceReview = () => {\r\n    const [reviews, setReviews] = useState([])\r\n    const [showAlertSuccess, setShowAlertSuccess] = useState(false);\r\n    const [showAlertDanger, setShowAlertDanger] = useState(false);\r\n    const [textMessage, setTextMessage] = useState('');\r\n    const [isActive, setIsActive] = useState(true);\r\n\r\n    const jwtToken = sessionStorage.getItem(\"token\");\r\n\r\n    const onChangeIsActive = (id,rstatus) => {\r\n        // console.log(id);\r\n        // setIsActive(!isActive);\r\n        updateStatus(id,rstatus);\r\n    }\r\n\r\n    // \r\n    const clickOnDelete = (reviewId) => {\r\n        confirmAlert({\r\n            title: 'Are you sure?',\r\n            message: 'You want to delete this item?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes, Delete it',\r\n                    onClick: () => deleteSize(reviewId)\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    // onClick: () => alert('Click No')\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    //* call delete api\r\n    const deleteSize = (reviewId) => {\r\n        axios.delete(`http://markbran.in/apis/admin/review/${reviewId}`)\r\n            .then(function (response) {\r\n                setShowAlertSuccess(true);\r\n                setShowAlertDanger(false);\r\n                axiosReviews();\r\n            })\r\n            .catch(function (error) {\r\n                setShowAlertSuccess(false);\r\n                setShowAlertDanger(true);\r\n            })\r\n    }\r\n    // * update status\r\n    const updateStatus = (reviewId, rstatus) => {\r\n        const formData = new FormData();\r\n        let status = JSON.parse(rstatus)?1:0 ;\r\n        console.log(status);\r\n        formData.append('status', (!status ? 1 : 0));\r\n        axios.post(`http://markbran.in/apis/admin/review/${reviewId}`, formData, {\r\n            headers: {\r\n                \"auth-token\": jwtToken //the token is a variable which holds the token\r\n            }\r\n        })\r\n            .then(response => {\r\n                // setLoading(false);\r\n                // history.push('/sizes')\r\n                console.log(response);\r\n                // setError(null);\r\n                setShowAlertSuccess(true);\r\n                setShowAlertDanger(false);\r\n                setTextMessage('Review approved!.');\r\n\r\n                axiosReviews();\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response);\r\n                if (error.response && error.response.data.message) {\r\n                    setShowAlertSuccess(false);\r\n                    setShowAlertDanger(true);\r\n                    setTextMessage(error.response.data.message);\r\n                } else {\r\n                    setShowAlertSuccess(false);\r\n                    setShowAlertDanger(true);\r\n                    setTextMessage(\"Something went wrong, try again!.\");\r\n                }\r\n                axiosReviews();\r\n                // setIsActive(isActive);\r\n            });\r\n    }\r\n    const axiosReviews = () => {\r\n        axios.get('http://markbran.in/apis/admin/review', {\r\n            headers: {\r\n                \"auth-token\": jwtToken //the token is a variable which holds the token\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response.data.reviews);\r\n                setReviews(response.data.reviews);\r\n                // setIsActive(response.data.reviews.status?true:false);\r\n                setShowAlertSuccess(false);\r\n                setShowAlertDanger(false);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error);\r\n                // console.log(error.response.data.message);\r\n                if (error.response && error.response.data.message) {\r\n                    setShowAlertSuccess(false);\r\n                    setShowAlertDanger(true);\r\n                    setTextMessage(error.response.data.message);\r\n                }\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        axiosReviews();\r\n        if (reviews) {\r\n            setIsActive(reviews.status);\r\n        }\r\n    }, [reviews.status]);\r\n    return (\r\n        <CRow>\r\n            <CCol xl={12}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        Product/Service Reviews\r\n                        {/* <CLink style={{ float: 'right' }} className=\"btn btn-success\" to=\"/product-service-review/add\">\r\n                            Add\r\n                        </CLink> */}\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        {showAlertSuccess ? <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                            <strong>Deleted</strong> {textMessage ? textMessage : 'Your item has been deleted successfully.'}\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div> : null}\r\n                        {showAlertDanger ? <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                            <strong>Alert </strong> {textMessage ? textMessage : 'Something went wrong try again later !.'}\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div> : null}\r\n                        <table className=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Title</th>\r\n                                    <th scope=\"col\">Product</th>\r\n                                    <th scope=\"col\">Review</th>\r\n                                    <th scope=\"col\">Approve</th>\r\n                                    <th scope=\"col\">Create at</th>\r\n                                    <th scope=\"col\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {reviews.map((item, index) =>\r\n                                    <tr key={item.id}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.productName}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>\r\n                                            <Switch onChange={() => onChangeIsActive(item.id,item.status)} checked={JSON.parse(item.status)?true:false} />\r\n                                        </td>\r\n                                        <td>{dateFormat(item.createdAt, \"mmmm dS, yyyy\")}</td>\r\n                                        <td>\r\n                                            {/* <CLink className=\"btn btn-sm btn-outline-warning\" to={`/sizes/edit-size/${item.id}`}>\r\n                                                Edit\r\n                                            </CLink> */}\r\n                                            <button onClick={() => clickOnDelete(item.id)} type=\"button\" className=\"btn btn-sm btn-outline-danger\">Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductServiceReview;\r\n"],"sourceRoot":""}