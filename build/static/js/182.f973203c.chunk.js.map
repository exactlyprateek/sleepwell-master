{"version":3,"sources":["views/aboutUs/AddCards.js"],"names":["axios","require","default","AddCards","useForm","mode","history","control","handleSubmit","formState","errors","useHistory","useState","error","setError","loading","setLoading","cardOneTitle","setCardOneTitle","setCardOneImage","cardOneDescription","setCardOneDescription","cardOneButtonText","setCardOneButtonText","cardOneButtonLink","setCardOneButtonLink","xs","sm","style","float","className","to","encType","onSubmit","e","preventDefault","formData","FormData","post","headers","then","response","push","catch","err","data","errorMessage","xl","htmlFor","type","onChange","target","value","placeholder","autoComplete","variant","files","custom","id","rows","disabled"],"mappings":"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","file":"static/js/182.f973203c.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react'\r\nimport {\r\n    // CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CInput,\r\n    CInputFile,\r\n    CInputGroup,\r\n    CLabel,\r\n    CLink,\r\n    CRow,\r\n    CTextarea\r\n} from '@coreui/react'\r\n// import CIcon from '@coreui/icons-react'\r\n// import { DocsLink } from 'src/reusable'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\nconst axios = require('axios').default;\r\n\r\n\r\nconst AddCards = () => {\r\n    const { control, handleSubmit, formState: { errors } } = useForm({ mode: 'all' });\r\n    let history = useHistory();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    //* card 2 \r\n    const [cardOneTitle, setCardOneTitle] = useState('');\r\n    const [cardOneImage, setCardOneImage] = useState('');\r\n    const [cardOneDescription, setCardOneDescription] = useState('');\r\n    const [cardOneButtonText, setCardOneButtonText] = useState('');\r\n    const [cardOneButtonLink, setCardOneButtonLink] = useState('');\r\n    \r\n    //* card 1\r\n    const cardOneImageOnChange = (e) => {\r\n        setCardOneImage(e.target.files[0]);\r\n    }\r\n    const cardOneTitleOnChange = (e) => {\r\n        setCardOneTitle(e.target.value);\r\n    }\r\n    const cardOneButtonTextOnChange = (e) => {\r\n        setCardOneButtonText(e.target.value);\r\n    }\r\n    const cardOneButtonLinkOnChange = (e) => {\r\n        setCardOneButtonLink(e.target.value);\r\n    }\r\n    const cardOneDescriptionOnChange = (e) => {\r\n        setCardOneDescription(e.target.value);\r\n    }\r\n    \r\n\r\n    const onHandlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('value', value);\r\n        // console.log('bannerImage', bannerImage);\r\n        setError(null);\r\n        setLoading(true);\r\n\r\n        const formData = new FormData();\r\n        // formData.append('bannerImage', bannerImage);\r\n        // formData.append('shortOrder', shortOrder);\r\n        // formData.append('title', title);\r\n        // formData.append('description', description);\r\n        // formData.append('bannerButtonText', bannerButtonText);\r\n        // formData.append('bannerButtonLink', bannerButtonLink);\r\n        // formData.append('content', content);\r\n        // console.log(formData);\r\n\r\n        axios.post('/banner/', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => {\r\n                setLoading(false);\r\n                // setUserSession(response.data.token, response.data.user);\r\n                history.push('/banners-manaement/banners')\r\n                // console.log(response);\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                if (err.response.data.errorMessage) {\r\n                    setError(err.response.data.errorMessage);\r\n                } else {\r\n                    setError(\"Something went wrong!\");\r\n                }\r\n            });\r\n    }\r\n    // console.log(errors);\r\n    return (\r\n        <div>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            Add Card Content\r\n                             <CLink style={{ float: 'right' }} className=\"btn btn-success\" to=\"/about-us/add-about-us\">\r\n                                Back\r\n                            </CLink>\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CForm encType=\"multipart/form-data\" onSubmit={onHandlerSubmit}>\r\n                                <br />\r\n                                {\r\n                                    error &&\r\n                                    <p className=\"text-danger\">\r\n                                        {error}\r\n                                    </p>\r\n                                }\r\n                                <CRow>\r\n                                    <CCol xl=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"shortItem\">Title</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CInput type=\"text\" onChange={cardOneTitleOnChange} value={cardOneTitle} placeholder=\"Title\" autoComplete=\"title\" />\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                    <CCol xs=\"6\">\r\n                                        <CLabel htmlFor=\"category\">Image</CLabel>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CLabel htmlFor=\"bannerImage\" variant=\"custom-file\">\r\n                                                Choose Image...\r\n                                            </CLabel>\r\n                                            <CInputFile onChange={cardOneImageOnChange} custom id=\"bannerImage\" type=\"file\" />\r\n                                        </CInputGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol xl=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"shortItem\">Button Text</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CInput type=\"text\" onChange={cardOneButtonTextOnChange} value={cardOneButtonText} placeholder=\"Title\" autoComplete=\"title\" />\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                    <CCol xl=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"shortItem\">Button Link</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CInput type=\"text\" onChange={cardOneButtonLinkOnChange} value={cardOneButtonLink} placeholder=\"Title\" autoComplete=\"title\" />\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol xl=\"12\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"shortItem\">Description</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CTextarea\r\n                                                    // component=\"textarea\"\r\n                                                    id=\"content\"\r\n                                                    rows=\"3\"\r\n                                                    onChange={cardOneDescriptionOnChange} value={cardOneDescription}\r\n                                                ></CTextarea>\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                \r\n                                <CRow>\r\n                                    <CCol xs=\"8\">\r\n                                        <button className=\"btn btn-success\" disabled={loading ? true : false} type=\"submit\">{loading ? 'Loading...' : 'Add Cards'}</button>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCards\r\n"],"sourceRoot":""}