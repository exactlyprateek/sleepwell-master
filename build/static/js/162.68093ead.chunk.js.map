{"version":3,"sources":["views/aboutUs/AddInnovations.js"],"names":["axios","require","default","AddInnovations","useForm","mode","history","control","handleSubmit","formState","errors","useHistory","useState","error","setError","loading","setLoading","sectionThreeBannerTitle","setSectionThreeBannerTitle","setSectionThreeImage","xs","sm","encType","onSubmit","e","preventDefault","formData","FormData","post","headers","then","response","push","catch","err","data","errorMessage","className","xl","htmlFor","type","onChange","target","value","placeholder","autoComplete","variant","files","custom","id","rows","disabled"],"mappings":"wKA0BMA,EAAQC,EAAQ,KAASC,QA2LhBC,UAxLQ,WACnB,MAAyDC,YAAQ,CAAEC,KAAM,QACrEC,GADJ,EAAQC,QAAR,EAAiBC,aAAjB,EAA+BC,UAAaC,OAC9BC,eACd,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAIA,EAA8CJ,mBAAS,IAAvD,mBACA,GADA,UAC8CA,mBAAS,KAAvD,mBACA,GADA,UAC0DA,mBAAS,KAAnE,mBAEA,GAFA,UAE8CA,mBAAS,KAAvD,mBACA,GADA,UAC8CA,mBAAS,KAAvD,mBACA,GADA,UAC0DA,mBAAS,KAAnE,mBACA,GADA,UAC0DA,mBAAS,KAAnE,mBAEA,GAFA,UAE8DA,mBAAS,KAAvE,mBAAOK,EAAP,KAAgCC,EAAhC,KACA,EAAkDN,mBAAS,IAA3D,mBAA0BO,GAA1B,WAGA,EAA4DP,mBAAS,IAArE,mBACA,GADA,UACgDA,mBAAS,KAAzD,mBACA,GADA,UAC4DA,mBAAS,KAArE,6BAuFA,OACI,mCACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAMQ,GAAG,KAAKC,GAAG,KAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,6BAIA,cAAC,IAAD,UACI,eAAC,IAAD,CAAOC,QAAQ,sBAAsBC,SAhDrC,SAACC,GACrBA,EAAEC,iBAGFX,EAAS,MACTE,GAAW,GAEX,IAAMU,EAAW,IAAIC,SAUrB3B,EAAM4B,KAAK,WAAYF,EAAU,CAC7BG,QAAS,CACL,eAAgB,yBAGnBC,MAAK,SAAAC,GACFf,GAAW,GAEXV,EAAQ0B,KAAK,iCAGhBC,OAAM,SAAAC,GACHlB,GAAW,GACPkB,EAAIH,SAASI,KAAKC,aAClBtB,EAASoB,EAAIH,SAASI,KAAKC,cAE3BtB,EAAS,6BAeD,UACI,uBAEID,GACA,mBAAGwB,UAAU,cAAb,SACKxB,IAIT,eAAC,KAAD,WACI,cAAC,IAAD,CAAMyB,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQC,QAAQ,YAAhB,mBACA,cAAC,IAAD,CAAaF,UAAU,OAAvB,SACI,cAAC,IAAD,CAAQG,KAAK,OAAOC,SAjFxB,SAACjB,GACrCN,EAA2BM,EAAEkB,OAAOC,QAgFmEA,MAAO1B,EAAyB2B,YAAY,QAAQC,aAAa,iBAI5I,eAAC,IAAD,CAAMzB,GAAG,IAAT,UACI,cAAC,KAAD,CAAQmB,QAAQ,WAAhB,mBACA,eAAC,IAAD,CAAaF,UAAU,OAAvB,UACI,cAAC,KAAD,CAAQE,QAAQ,cAAcO,QAAQ,cAAtC,6BAGA,cAAC,IAAD,CAAYL,SA9FlB,SAACjB,GAC/BL,EAAqBK,EAAEkB,OAAOK,MAAM,KA6FiDC,QAAM,EAACC,GAAG,cAAcT,KAAK,kBAI1F,cAAC,KAAD,UACI,cAAC,IAAD,CAAMF,GAAG,KAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQC,QAAQ,YAAhB,yBACA,cAAC,IAAD,CAAaF,UAAU,OAAvB,SACI,cAAC,KAAD,CACIY,GAAG,UACHC,KAAK,eAczB,cAAC,KAAD,UACI,cAAC,IAAD,CAAM9B,GAAG,IAAT,SACI,wBAAQiB,UAAU,kBAAkBc,WAAUpC,EAAwByB,KAAK,SAA3E,SAAqFzB,EAAU,aAAe","file":"static/js/162.68093ead.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport {\n    // CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInputFile,\n    CInputGroup,\n    CLabel,\n    CLink,\n    CRow,\n    CTextarea\n} from '@coreui/react'\n// import CIcon from '@coreui/icons-react'\n// import { DocsLink } from 'src/reusable'\n// import { EditorState } from 'draft-js';\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// import '../../App.css';\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nconst axios = require('axios').default;\n\n\nconst AddInnovations = () => {\n    const { control, handleSubmit, formState: { errors } } = useForm({ mode: 'all' });\n    let history = useHistory();\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    // const [content, setContent] = useState('');\n\n    //* section 2 \n    const [sectionOneTitle, setSectionOneTitle] = useState('');\n    const [sectionOneImage, setSectionOneImage] = useState('');\n    const [sectionOneDescription, setSectionOneDescription] = useState('');\n    //* section 2 \n    const [sectionTwoTitle, setSectionTwoTitle] = useState('');\n    const [sectionTwoImage, setSectionTwoImage] = useState('');\n    const [sectionTwoDescription, setSectionTwoDescription] = useState('');\n    const [sectionTwoBannerTitle, setSectionTwoBannerTitle] = useState('');\n    //* section 3\n    const [sectionThreeBannerTitle, setSectionThreeBannerTitle] = useState('');\n    const [sectionThreeImage, setSectionThreeImage] = useState('');\n    // const [sectionThreeDescription, setSectionThreeDescription] = useState(() => EditorState.createEmpty(),);\n    //* section 4\n    const [sectionFourBannerTitle, setSectionFourBannerTitle] = useState('');\n    const [sectionFourImage, setSectionFourImage] = useState('');\n    const [sectionFourDescription, setSectionFourDescription] = useState('');\n\n\n    //* section 1\n    const sectionOneImageOnChange = (e) => {\n        setSectionOneImage(e.target.files[0]);\n    }\n    const sectionOneTitleOnChange = (e) => {\n        setSectionOneTitle(e.target.value);\n    }\n    const sectionOneDescriptionOnChange = (e) => {\n        setSectionOneDescription(e.target.value);\n    }\n    //* section 2 \n    const sectionTwoImageOnChange = (e) => {\n        setSectionTwoImage(e.target.files[0]);\n    }\n    const sectionTwoTitleOnChange = (e) => {\n        setSectionTwoTitle(e.target.value);\n    }\n    const sectionTwoDescriptionOnChange = (e) => {\n        setSectionTwoDescription(e.target.value);\n    }\n    const sectionTwoBannerTitleOnChange = (e) => {\n        setSectionTwoBannerTitle(e.target.value);\n    }\n    //* section 3 \n    const sectionThreeImageOnChange = (e) => {\n        setSectionThreeImage(e.target.files[0]);\n    }\n    const sectionThreeBannerTitleOnChange = (e) => {\n        setSectionThreeBannerTitle(e.target.value);\n    }\n    const sectionThreeDescriptionOnChange = (e) => {\n        // setSectionThreeDescription(e.target.value);\n    }\n    //* section 4 \n    const sectionFourImageOnChange = (e) => {\n        setSectionFourImage(e.target.files[0]);\n    }\n    const sectionFourBannerTitleOnChange = (e) => {\n        setSectionFourBannerTitle(e.target.value);\n    }\n    const sectionFourDescriptionOnChange = (e) => {\n        setSectionFourDescription(e.target.value);\n    }\n\n\n\n    const onHandlerSubmit = (e) => {\n        e.preventDefault();\n        // console.log('value', value);\n        // console.log('bannerImage', bannerImage);\n        setError(null);\n        setLoading(true);\n\n        const formData = new FormData();\n        // formData.append('bannerImage', bannerImage);\n        // formData.append('shortOrder', shortOrder);\n        // formData.append('title', title);\n        // formData.append('description', description);\n        // formData.append('bannerButtonText', bannerButtonText);\n        // formData.append('bannerButtonLink', bannerButtonLink);\n        // formData.append('content', content);\n        // console.log(formData);\n\n        axios.post('/banner/', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n            .then(response => {\n                setLoading(false);\n                // setUserSession(response.data.token, response.data.user);\n                history.push('/banners-manaement/banners')\n                // console.log(response);\n            })\n            .catch(err => {\n                setLoading(false);\n                if (err.response.data.errorMessage) {\n                    setError(err.response.data.errorMessage);\n                } else {\n                    setError(\"Something went wrong!\");\n                }\n            });\n    }\n    // console.log(errors);\n    return (\n        <>\n            <CRow>\n                <CCol xs=\"12\" sm=\"12\">\n                    <CCard>\n                        <CCardHeader>\n                            Add Innovation\n\n                        </CCardHeader>\n                        <CCardBody>\n                            <CForm encType=\"multipart/form-data\" onSubmit={onHandlerSubmit}>\n                                <br />\n                                {\n                                    error &&\n                                    <p className=\"text-danger\">\n                                        {error}\n                                    </p>\n                                }\n                                \n                                <CRow>\n                                    <CCol xl=\"6\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"shortItem\">Title</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CInput type=\"text\" onChange={sectionThreeBannerTitleOnChange} value={sectionThreeBannerTitle} placeholder=\"Title\" autoComplete=\"title\" />\n                                            </CInputGroup>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"6\">\n                                        <CLabel htmlFor=\"category\">Image</CLabel>\n                                        <CInputGroup className=\"mb-3\">\n                                            <CLabel htmlFor=\"bannerImage\" variant=\"custom-file\">\n                                                Choose Image...\n                                            </CLabel>\n                                            <CInputFile onChange={sectionThreeImageOnChange} custom id=\"bannerImage\" type=\"file\" />\n                                        </CInputGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol xl=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"shortItem\">Description</CLabel>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CTextarea\n                                                    id=\"content\"\n                                                    rows=\"3\"\n                                                    // onChange={sectionThreeDescriptionOnChange} value={sectionThreeDescription}\n                                                ></CTextarea>\n                                                {/* <Editor\n                                                    editorState={sectionThreeDescription}\n                                                    onEditorStateChange={setSectionThreeDescription}\n                                                    wrapperClassName=\"wrapper-class\"\n                                                    editorClassName=\"editor-class\"\n                                                    toolbarClassName=\"toolbar-class\"\n                                                /> */}\n                                            </CInputGroup>\n                                        </CFormGroup>\n                                    </CCol>\n                                </CRow>\n                                <CRow>\n                                    <CCol xs=\"8\">\n                                        <button className=\"btn btn-success\" disabled={loading ? true : false} type=\"submit\">{loading ? 'Loading...' : 'Add Content'}</button>\n                                    </CCol>\n                                </CRow>\n                            </CForm>\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n\n        </>\n    )\n}\n\nexport default AddInnovations\n"],"sourceRoot":""}