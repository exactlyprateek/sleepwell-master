{"version":3,"sources":["views/aboutUs/AboutBannerComponent.js","components/CkEditor5.js"],"names":["axios","require","default","AddAboutBannerComponent","useForm","mode","history","control","handleSubmit","formState","errors","useHistory","useState","error","setError","loading","setLoading","setPageDescription","sectionOneTitle","setSectionOneTitle","setSectionOneImage","className","xs","sm","encType","onSubmit","e","preventDefault","formData","FormData","post","headers","then","response","push","catch","err","data","errorMessage","xl","htmlFor","type","onChange","target","value","placeholder","autoComplete","variant","files","custom","id","onEditorValue","disabled","CkEditor5","props","ref","useRef","editor","ClassicEditor","editorValue","event","getData"],"mappings":"0LA6BMA,EAAQC,EAAQ,KAASC,QAqJhBC,UAjJiB,WAC5B,MAAyDC,YAAQ,CAAEC,KAAM,QACrEC,GADJ,EAAQC,QAAR,EAAiBC,aAAjB,EAA+BC,UAAaC,OAC9BC,eACd,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAwBK,GAAxB,WAMA,EAA8CL,mBAAS,IAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KACA,EAA8CP,mBAAS,IAAvD,mBAAwBQ,GAAxB,WAqDA,OACI,8BACI,cAAC,KAAD,CAAMC,UAAU,OAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,+BAIA,cAAC,IAAD,UACI,eAAC,IAAD,CAAOC,QAAQ,sBAAsBC,SAhDrC,SAACC,GACrBA,EAAEC,iBAGFb,EAAS,MACTE,GAAW,GAEX,IAAMY,EAAW,IAAIC,SAUrB7B,EAAM8B,KAAK,WAAYF,EAAU,CAC7BG,QAAS,CACL,eAAgB,yBAGnBC,MAAK,SAAAC,GACFjB,GAAW,GAEXV,EAAQ4B,KAAK,iCAGhBC,OAAM,SAAAC,GACHpB,GAAW,GACPoB,EAAIH,SAASI,KAAKC,aAClBxB,EAASsB,EAAIH,SAASI,KAAKC,cAE3BxB,EAAS,6BAeD,UACI,uBAEID,GACA,mBAAGQ,UAAU,cAAb,SACKR,IAIT,eAAC,KAAD,WAEI,cAAC,IAAD,CAAM0B,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQC,QAAQ,YAAhB,mBACA,cAAC,IAAD,CAAanB,UAAU,OAAvB,SACI,cAAC,IAAD,CAAQoB,KAAK,OAAOC,SAtEhC,SAAChB,GAC7BP,EAAmBO,EAAEiB,OAAOC,QAqEmEA,MAAO1B,EAAiB2B,YAAY,QAAQC,aAAa,iBAI5H,eAAC,IAAD,CAAMxB,GAAG,IAAT,UACI,cAAC,KAAD,CAAQkB,QAAQ,WAAhB,mBACA,eAAC,IAAD,CAAanB,UAAU,OAAvB,UACI,cAAC,KAAD,CAAQmB,QAAQ,eAAeO,QAAQ,cAAvC,6BAGA,cAAC,IAAD,CAAYL,SAnFpB,SAAChB,GAC7BN,EAAmBM,EAAEiB,OAAOK,MAAM,KAkFiDC,QAAM,EAACC,GAAG,eAAeT,KAAK,kBAIzF,cAAC,KAAD,UACI,cAAC,IAAD,CAAMF,GAAG,KAAT,SACI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQC,QAAQ,YAAhB,yBACA,cAAC,IAAD,CAAUW,cApFxB,SAACd,GACvBpB,EAAmBoB,MAqFiB,cAAC,IAAD,CAAahB,UAAU,gBAoBnC,cAAC,KAAD,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,wBAAQD,UAAU,kBAAkB+B,WAAUrC,EAAwB0B,KAAK,SAA3E,SAAqF1B,EAAU,aAAe,oC,iCCrKtJ,uDA0EesC,IA1DC,SAACC,EAAOC,GACGC,mBAQvB,OACI,8BACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAMlC,GAAG,KAAKC,GAAG,KAAjB,SAqBI,cAAC,WAAD,CACIkC,OAAQC,IACRrB,KAAOiB,EAAMK,YAAcL,EAAMK,YAAc,GAS/CjB,SAzCG,SAACkB,EAAOH,GACvBA,EAAOI,WACPP,EAAMH,cAAcM,EAAOI","file":"static/js/162.891fc2b5.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react'\r\nimport {\r\n    // CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CInput,\r\n    CInputFile,\r\n    CInputGroup,\r\n    CLabel,\r\n    CLink,\r\n    CRow,\r\n    CTextarea\r\n} from '@coreui/react'\r\n\r\n// import CIcon from '@coreui/icons-react'\r\n// import { DocsLink } from 'src/reusable'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\n// import { EditorState } from 'draft-js';\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import '../../App.css';\r\nimport CkEditor from '../../components/CkEditor5.js';\r\n\r\nconst axios = require('axios').default;\r\n\r\n\r\n\r\nconst AddAboutBannerComponent = () => {\r\n    const { control, handleSubmit, formState: { errors } } = useForm({ mode: 'all' });\r\n    let history = useHistory();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [pageDescription, setPageDescription] = useState('');\r\n\r\n    // const [content, setContent] = useState('');\r\n\r\n\r\n    //* section 2 \r\n    const [sectionOneTitle, setSectionOneTitle] = useState('');\r\n    const [sectionOneImage, setSectionOneImage] = useState('');\r\n    // const [sectionThreeDescription, setSectionThreeDescription] = useState(() => EditorState.createEmpty(),);\r\n\r\n\r\n    //* section 1\r\n    const sectionOneImageOnChange = (e) => {\r\n        setSectionOneImage(e.target.files[0]);\r\n    }\r\n    const sectionOneTitleOnChange = (e) => {\r\n        setSectionOneTitle(e.target.value);\r\n    }\r\n\r\n    const handleDescription = (data) => {\r\n        setPageDescription(data);\r\n    }\r\n    const onHandlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('value', value);\r\n        // console.log('bannerImage', bannerImage);\r\n        setError(null);\r\n        setLoading(true);\r\n\r\n        const formData = new FormData();\r\n        // formData.append('bannerImage', bannerImage);\r\n        // formData.append('shortOrder', shortOrder);\r\n        // formData.append('title', title);\r\n        // formData.append('description', description);\r\n        // formData.append('bannerButtonText', bannerButtonText);\r\n        // formData.append('bannerButtonLink', bannerButtonLink);\r\n        // formData.append('content', content);\r\n        // console.log(formData);\r\n\r\n        axios.post('/banner/', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => {\r\n                setLoading(false);\r\n                // setUserSession(response.data.token, response.data.user);\r\n                history.push('/banners-manaement/banners')\r\n                // console.log(response);\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                if (err.response.data.errorMessage) {\r\n                    setError(err.response.data.errorMessage);\r\n                } else {\r\n                    setError(\"Something went wrong!\");\r\n                }\r\n            });\r\n    }\r\n    // console.log(errors);\r\n    return (\r\n        <div>\r\n            <CRow className=\"mb-4\">\r\n                <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            Add about banner\r\n\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CForm encType=\"multipart/form-data\" onSubmit={onHandlerSubmit}>\r\n                                <br />\r\n                                {\r\n                                    error &&\r\n                                    <p className=\"text-danger\">\r\n                                        {error}\r\n                                    </p>\r\n                                }\r\n                                \r\n                                <CRow>\r\n\r\n                                    <CCol xl=\"6\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"shortItem\">Title</CLabel>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CInput type=\"text\" onChange={sectionOneTitleOnChange} value={sectionOneTitle} placeholder=\"Title\" autoComplete=\"title\" />\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                    <CCol xs=\"6\">\r\n                                        <CLabel htmlFor=\"category\">Image</CLabel>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CLabel htmlFor=\"cardOneImage\" variant=\"custom-file\">\r\n                                                Choose Image...\r\n                                            </CLabel>\r\n                                            <CInputFile onChange={sectionOneImageOnChange} custom id=\"cardOneImage\" type=\"file\" />\r\n                                        </CInputGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol xl=\"12\">\r\n                                        <CFormGroup>\r\n                                            <CLabel htmlFor=\"shortItem\">Description</CLabel>\r\n                                            <CkEditor onEditorValue={handleDescription} />\r\n\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                {/* <CTextarea\r\n                                                            // component=\"textarea\"\r\n                                                            id=\"content\"\r\n                                                            rows=\"3\"\r\n                                                            // onChange={sectionOneDescriptionOnChange} value={sectionOneDescription}\r\n                                                ></CTextarea> */}\r\n                                                {/* <Editor\r\n                                                    editorState={sectionThreeDescription}\r\n                                                    onEditorStateChange={setSectionThreeDescription}\r\n                                                    wrapperClassName=\"wrapper-class\"\r\n                                                    editorClassName=\"editor-class\"\r\n                                                    toolbarClassName=\"toolbar-class\"\r\n                                                /> */}\r\n\r\n                                            </CInputGroup>\r\n                                        </CFormGroup>\r\n                                    </CCol>\r\n                                </CRow>\r\n\r\n                                <CRow>\r\n                                    <CCol xs=\"8\">\r\n                                        <button className=\"btn btn-success\" disabled={loading ? true : false} type=\"submit\">{loading ? 'Loading...' : 'Save banner'}</button>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAboutBannerComponent\r\n","import React, { forwardRef, useEffect, useRef, useState } from 'react'\r\nimport {\r\n    CCol,\r\n    CRow,\r\n    CInput,\r\n\r\n} from '@coreui/react'\r\n\r\n// import { EditorState } from 'draft-js';\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import '../App.css';\r\n\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nlet CkEditor5 = (props, ref) => {\r\n    const editorValueRef = useRef();\r\n   \r\n    const editorOnChange = (event, editor) => {\r\n        if (editor.getData()) {\r\n            props.onEditorValue(editor.getData());\r\n        }\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm=\"12\">\r\n                    {/* <Editor\r\n                        toolbar={{\r\n                            image: {\r\n                                urlEnabled: true,\r\n                                uploadEnabled: true,\r\n                                uploadCallback: _uploadImageCallBack,\r\n                                alignmentEnabled: true,\r\n                                inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n                            }\r\n                        }}\r\n                        editorState={wysiwygDescription}\r\n                        onEditorStateChange={onEditorStateChange}\r\n                        wrapperClassName=\"wrapper-class\"\r\n                        editorClassName=\"editor-class\"\r\n                        toolbarClassName=\"toolbar-class\"\r\n                        onChange={editorOnChange}\r\n                        ref={editorValueRef}\r\n                    // ref={ref => editorValueRef(ref)}\r\n                    /> */}\r\n\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={(props.editorValue ? props.editorValue : '')}\r\n                        // onReady={editor => {\r\n                        //     // You can store the \"editor\" and use when it is needed.\r\n                        //     console.log('Editor is ready to use!', editor);\r\n                        // }}\r\n                        // onChange={(event, editor) => {\r\n                        //     const data = editor.getData();\r\n                        //     console.log({ event, editor, data });\r\n                        // }}\r\n                        onChange={editorOnChange}\r\n                        // onBlur={(event, editor) => {\r\n                        //     console.log('Blur.', editor);\r\n                        // }}\r\n                        // onFocus={(event, editor) => {\r\n                        //     console.log('Focus.', editor);\r\n                        // }}\r\n                    />\r\n                </CCol>\r\n            </CRow>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CkEditor5\r\n"],"sourceRoot":""}