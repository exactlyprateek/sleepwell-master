{"version":3,"sources":["views/permision/AddPermission.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js"],"names":["schema","yup","shape","user","required","AddPermision","useForm","mode","resolver","yupResolver","control","register","errors","handleSubmit","formState","useState","loading","setSections","title","id","sectionsList","xl","xs","md","htmlFor","className","name","defaultValue","rules","value","message","render","field","color","options","onSelect","e","displayValue","disabled","type","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","from","test","_arrayLikeToArray","len","arr2"],"mappings":"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","file":"static/js/81.ab003246.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n    CFormGroup,\n    CInputGroup,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CForm,\n    CSwitch,\n    CSelect,\n    CLabel,\n    CFormText,\n} from '@coreui/react'\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useForm, Controller } from 'react-hook-form';\n\nconst schema = yup.object().shape({\n    user: yup.string().required(),\n});\n\n\nconst AddPermision = () => {\n    const { register, control, handleSubmit, formState: { errors } } = useForm({ mode: 'all', resolver: yupResolver(schema) });\n\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState('');\n    const [sections, setSections] = useState('');\n    const [sectionsList, setSectionsList] = useState([{ title: 'Home management', id: 1 }, { title: 'Content management', id: 2 }]);\n\n    const onChangeUser = (e) => {\n        setUser(e.target.value);\n    }\n    const onChangeSections = (e) => {\n        setSections(e);\n    }\n    return (\n        <CRow>\n            <CCol xl={12}>\n                <CCard>\n                    <CCardHeader>\n                        Permision\n                    </CCardHeader>\n                    <CCardBody>\n                        {/* <CDataTable>\n\n                        </CDataTable> */}\n                        <CForm>\n                            <CRow>\n                                <CCol xs=\"12\" md=\"6\">\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"category\">Title</CLabel>\n                                        <CInputGroup className=\"mb-3\">\n                                            <Controller\n                                                name=\"user\"\n                                                control={control}\n                                                defaultValue={''}\n                                                rules={{\n                                                    required: {\n                                                        value: true,\n                                                        message: \"title is required\"\n                                                    },\n                                                }}\n                                                render={({ field }) => <CSelect {...field}>\n                                                    <option value=\"\">\n                                                        Select user\n                                                    </option>\n                                                    <option value={1}>\n                                                        admin\n                                                    </option>\n                                                    <option value={1}>\n                                                        user\n                                                    </option>\n\n                                                </CSelect>}\n                                            />\n                                        </CInputGroup>\n                                        <CFormText className=\"help-block text-danger\" color=\"red\">{errors.user && errors.user.message}</CFormText>\n                                    </CFormGroup>\n                                </CCol>\n                                <CCol xs=\"12\" md=\"6\">\n                                    <CFormGroup>\n                                        <CLabel htmlFor=\"category\">Sections</CLabel>\n                                        <CInputGroup className=\"mb-3\">\n                                            <Multiselect\n                                                options={sectionsList} // Options to display in the dropdown\n                                                // selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                                                onSelect={onChangeSections} // Function will trigger on select event\n                                                // onRemove={this.onRemove} // Function will trigger on remove event\n                                                displayValue=\"title\" // Property name to display in the dropdown options\n                                            />\n                                        </CInputGroup>\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol md=\"3\">\n                                    <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Create</CLabel>\n                                        <CInputGroup>\n                                            <CSwitch\n                                                key={1}\n                                                color=\"success\"\n                                            />\n                                        </CInputGroup>\n                                    </CFormGroup>\n                                </CCol>\n                                <CCol md=\"3\">\n                                    <CFormGroup>\n                                            <CLabel htmlFor=\"category\">View</CLabel>\n                                        <CInputGroup>\n                                            <CSwitch\n                                                key={1}\n                                                color=\"success\"\n                                            />\n                                        </CInputGroup>\n                                    </CFormGroup>\n                                </CCol>\n                                <CCol md=\"3\">\n                                    <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Update</CLabel>\n                                        <CInputGroup>\n                                            <CSwitch\n                                                key={1}\n                                                color=\"success\"\n                                            />\n                                        </CInputGroup>\n                                    </CFormGroup>\n                                </CCol>\n                                <CCol md=\"3\">\n                                    <CFormGroup>\n                                            <CLabel htmlFor=\"category\">Delete</CLabel>\n                                        <CInputGroup>\n                                            <CSwitch\n                                                key={1}\n                                                color=\"success\"\n                                            />\n                                        </CInputGroup>\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                            <CRow>\n                                <CCol xs=\"8\" className=\"my-4\">\n                                    <button className=\"btn btn-success\" disabled={loading ? true : false} type=\"submit\">{loading ? 'Loading...' : 'Add permission'}</button>\n                                </CCol>\n                            </CRow>\n                        </CForm>\n                    </CCardBody>\n                </CCard>\n            </CCol>\n        </CRow>\n    )\n\n}\n\nexport default AddPermision;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}"],"sourceRoot":""}