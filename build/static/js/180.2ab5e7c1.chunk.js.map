{"version":3,"sources":["views/servicePages/EditServiceCategory.js"],"names":["EditServiceCategory","categoryId","useParams","useState","setServiceCategory","showAlertSuccess","setShowAlertSuccess","showAlertDanger","setShowAlertDanger","jwtToken","sessionStorage","getItem","title","setTitle","link","setLink","sortOrder","setSortOrder","image","setImage","status","setStatus","error","loading","setLoading","getServiceCategoryById","axios","get","id","headers","then","response","console","log","data","category","catch","finally","useEffect","xl","className","role","onClick","type","data-dismiss","aria-label","aria-hidden","encType","onSubmit","formData","FormData","append","patch","htmlFor","onChange","e","target","value","placeholder","autoComplete","xs","variant","files","custom","src","process","width","alt","checked","disabled"],"mappings":"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","file":"static/js/180.2ab5e7c1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n\t// CBadge,\n\tCCard,\n\tCCardBody,\n\tCCardHeader,\n\tCCol,\n\t// CDataTable,\n\tCRow,\n\t// CPagination,\n\tCLink,\n\tCTabs,\n\tCContainer,\n\tCFormGroup,\n\tCLabel,\n\tCInputGroup,\n\tCInput,\n\tCForm,\n\tCInputFile\n} from '@coreui/react';\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { useHistory, useParams, useLocation } from 'react-router';\nimport ReactSwitch from 'react-switch';\n\nconst EditServiceCategory = () => {\n\tlet categoryId = useParams();\n\tconst [ serviceCategory, setServiceCategory ] = useState({});\n\tconst [ showAlertSuccess, setShowAlertSuccess ] = useState(false);\n\tconst [ showAlertDanger, setShowAlertDanger ] = useState(false);\n\tconst jwtToken = sessionStorage.getItem('token');\n\tconst [ title, setTitle ] = useState('');\n\tconst [ link, setLink ] = useState('');\n\tconst [ sortOrder, setSortOrder ] = useState('');\n\tconst [ image, setImage ] = useState('');\n\tconst [ status, setStatus ] = useState(false);\n\tconst [ view, setView ] = useState(0);\n\tconst [ error, setError ] = useState(false);\n\tconst [ loading, setLoading ] = useState(false);\n\t// const [ status, setStatus ] = useState(false);\n\t//\n\t// const clickOnDelete = (categoryId) => {\n\t// \tconfirmAlert({\n\t// \t\ttitle: 'Are you sure?',\n\t// \t\tmessage: 'You want to delete this item?',\n\t// \t\tbuttons: [\n\t// \t\t\t{\n\t// \t\t\t\tlabel: 'Yes, Delete it',\n\t// \t\t\t\tonClick: () => deleteCategory(categoryId)\n\t// \t\t\t},\n\t// \t\t\t{\n\t// \t\t\t\tlabel: 'No'\n\t// \t\t\t\t// onClick: () => alert('Click No')\n\t// \t\t\t}\n\t// \t\t]\n\t// \t});\n\t// };\n\t//* call delete api\n\tconst deleteCategory = (categoryId) => {\n\t\t// alert(categoryId)\n\t\taxios\n\t\t\t.delete(`http://markbran.in/apis/admin/category/${categoryId.id}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'auth-token': jwtToken //the token is a variable which holds the token\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function(response) {\n\t\t\t\tsetShowAlertSuccess(true);\n\t\t\t\tsetShowAlertDanger(false);\n\t\t\t\tgetServiceCategoryById();\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tsetShowAlertSuccess(false);\n\t\t\t\tsetShowAlertDanger(true);\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\tconst onHandlerSubmit = () => {\n\t\tsetLoading(true);\n\t\tlet formData = new FormData();\n\t\tformData.append('title', title);\n\t\tformData.append('link', link);\n\t\tformData.append('image', image);\n\t\tformData.append('sortOrder', sortOrder);\n\t\tformData.append('status', status ? 1 : 0);\n\t\taxios\n\t\t\t.patch('http://markbran.in/apis/admin/service-category/' + categoryId.id, formData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'auth-token': jwtToken //the token is a variable which holds the token\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.category);\n\t\t\t\tgetServiceCategoryById();\n\t\t\t\tsetShowAlertSuccess(true);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\t// handle error\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetShowAlertDanger('Something went wrong');\n\t\t\t})\n\t\t\t.finally(() => setLoading(false));\n\t};\n\tconst getServiceCategoryById = () => {\n\t\tsetLoading(true);\n\t\taxios\n\t\t\t.get('http://markbran.in/apis/admin/service-category/' + categoryId.id, {\n\t\t\t\theaders: {\n\t\t\t\t\t'auth-token': jwtToken //the token is a variable which holds the token\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.category);\n\t\t\t\tsetServiceCategory(response.data.category);\n\t\t\t\tsetTitle(response.data.category.title);\n\t\t\t\tsetLink(response.data.category.link);\n\t\t\t\tsetImage(response.data.category.image);\n\t\t\t\tsetSortOrder(response.data.category.sortOrder);\n\t\t\t\tsetStatus(response.data.category.status ? true : false);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\t// handle error\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetShowAlertDanger('Something went wrong');\n\t\t\t})\n\t\t\t.finally(() => setLoading(false));\n\t};\n\tuseEffect(() => {\n\t\tgetServiceCategoryById();\n\t\t// console.log(categoryId.id);\n\t}, []);\n\treturn (\n\t\t<CRow>\n\t\t\t<CCol xl={12}>\n\t\t\t\t<CCard>\n\t\t\t\t\t<CCardHeader>\n\t\t\t\t\t\tEdit Service Category ID: {categoryId.id}\n\t\t\t\t\t\t{/* <small  className=\"text-muted\"> example</small> */}\n\t\t\t\t\t</CCardHeader>\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t{showAlertSuccess ? (\n\t\t\t\t\t\t\t<div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n\t\t\t\t\t\t\t\t<strong>Saved</strong> Operation Successful.\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={() => setShowAlertSuccess(false)}\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"alert\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{showAlertDanger ? (\n\t\t\t\t\t\t\t<div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n\t\t\t\t\t\t\t\t<strong>Alert</strong> Something went wrong try again later !.\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={() => setShowAlertDanger(false)}\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"alert\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t<CContainer>\n\t\t\t\t\t\t\t<CForm encType=\"multipart/form-data\" onSubmit={onHandlerSubmit}>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{error && <p className=\"text-danger\">{error}</p>}\n\t\t\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t\t\t<CCol xl=\"6\">\n\t\t\t\t\t\t\t\t\t\t<CFormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"shortItem\">Category Ttile</CLabel>\n\t\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Title\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"title\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</CInputGroup>\n\t\t\t\t\t\t\t\t\t\t</CFormGroup>\n\t\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t\t<CCol xs=\"5\">\n\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"category\">Category Image</CLabel>\n\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"categoryImage\" variant=\"custom-file\">\n\t\t\t\t\t\t\t\t\t\t\t\tChoose Image...\n\t\t\t\t\t\t\t\t\t\t\t</CLabel>\n\t\t\t\t\t\t\t\t\t\t\t{/* <Controller\n                                                name=\"bannerImage\"\n                                                control={control}\n                                                defaultValue={''}\n                                                rules={{\n                                                    required: {\n                                                        value: true,\n                                                        message: \"Image file is required\"\n                                                    },\n                                                }}\n                                                render={({ field }) => <CInputFile {...field} onChange={onChange} custom id=\"bannerImage\" />}\n                                            /> */}\n\t\t\t\t\t\t\t\t\t\t\t<CInputFile\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setImage(e.target.files[0])}\n\t\t\t\t\t\t\t\t\t\t\t\tcustom\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"categoryImage\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</CInputGroup>\n\t\t\t\t\t\t\t\t\t\t{/* <CFormText className=\"help-block text-danger\" color=\"red\">{errors.categoryId && errors.categoryId.message}</CFormText> */}\n\t\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t\t<CCol xs=\"1\">\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={`${process.env.REACT_APP_BASE_URL}/${image}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"img-fluid\"\n\t\t\t\t\t\t\t\t\t\t\twidth=\"120px\"\n\t\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t\t\t<CCol xl=\"6\">\n\t\t\t\t\t\t\t\t\t\t<CFormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"shortItem\">Link</CLabel>\n\t\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setLink(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={link}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"Link\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</CInputGroup>\n\t\t\t\t\t\t\t\t\t\t</CFormGroup>\n\t\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t\t<CCol xl=\"6\">\n\t\t\t\t\t\t\t\t\t\t<CFormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"shortItem\">Sort Order</CLabel>\n\t\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setSortOrder(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sortOrder}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Sort order\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"Sort Order\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</CInputGroup>\n\t\t\t\t\t\t\t\t\t\t</CFormGroup>\n\t\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t\t{/* <CCol xs=\"6\">\n\t\t\t\t\t\t\t\t\t\t<CFormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"category\">Select State</CLabel>\n\t\t\t\t\t\t\t\t\t\t\t<CInputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t{stateArray && states ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Multiselect\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={stateArray} // Options to display in the dropdown\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedValues={stateArray.filter((i, index) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstates.toString().includes(i.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)} // Preselected value to persist in dropdown\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(e) => handleStateSelect(e)} // Function will trigger on select event\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayValue=\"state\" // Property name to display in the dropdown options\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Loading States'\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</CInputGroup>\n\t\t\t\t\t\t\t\t\t\t</CFormGroup>\n\t\t\t\t\t\t\t\t\t</CCol> */}\n\t\t\t\t\t\t\t\t</CRow>\n\n\t\t\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t\t\t<CCol xl=\"6\">\n\t\t\t\t\t\t\t\t\t\t<CFormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<CLabel htmlFor=\"category\">Status</CLabel>\n\t\t\t\t\t\t\t\t\t\t\t<CInputGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t<ReactSwitch onChange={() => setStatus(!status)} checked={status} />\n\t\t\t\t\t\t\t\t\t\t\t</CInputGroup>\n\t\t\t\t\t\t\t\t\t\t</CFormGroup>\n\t\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t\t\t<CCol xs=\"8\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={loading ? true : false}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{loading ? 'Loading...' : 'Edit Category'}\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t\t</CForm>\n\t\t\t\t\t\t</CContainer>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t</CCard>\n\t\t\t</CCol>\n\t\t</CRow>\n\t);\n};\n\nexport default EditServiceCategory;\n"],"sourceRoot":""}